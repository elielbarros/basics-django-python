"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-1daynq=q=qh-@8vv&-2m$-#gs(j=!uo#hy_tt^(-fz7j^#b_bf'

# SECURITY WARNING: don't run with debug turned on in production!
# IF DEBUG FILLED AS FALSE:
# CommandError: You must set settings.ALLOWED_HOSTS if DEBUG is False.
# IT IS NECESSARY TO CONFIGURE ALLOWED_HOSTS
DEBUG = False

# AFTER SET DEBUG AS FALSE, SET HOST HERE
# AFTER SET ALLOWED HOST ALL STATIC FILES AS CSS FILES WILL NOT BE LOADED
# THIS HAPPENS BECAUSE DJANGO SERVER DOES NOT WORK TO SERVE FILES
# DJANGO IS AN APPLICATION NOT A SERVER
# THATS WHY GUNICORN
# ANYWAY, RUN APPLICATION WITH PYTHON LIKE THE COMMAND:
# - python manage.py collectstatic
# django.core.exceptions.ImproperlyConfigured: You're using the staticfiles
# app without having set the STATIC_ROOT setting to a filesystem path.
# SO IT IS NECESSARY TO CONFIGURE STATIC_ROOT
ALLOWED_HOSTS = [
    '127.0.0.1'
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'home',
    'blog'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'base'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# As the directory template, it is possible to create static directory
# inside apps. On this project, for example, Django will recognize when a
# directory named static is created in home or blog.
STATIC_URL = 'static/'

# To add static files from directory base that was created for base purposes
STATICFILES_DIRS = [
    BASE_DIR / 'base' / 'static'
]

# CONFIGURE STATIC_ROOT MENTIONED BEFORE
# STATIC_ROOT WILL BE A DIRECTORY THAT WILL MAINTAIN DJANGO APPLICATION
# STATIC FILES
# THIS DIRECTORY DOES NOT NEED TO GO TO GIT
# AS KNOWN DJANGO DOES NOT SERVE THIS STATIC FILES SO IT WILL BE USED WHITE
# NOISE. HERE THE DOCUMENTATION:
# https://whitenoise.readthedocs.io/en/latest/
STATIC_ROOT = BASE_DIR / 'static_files'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
